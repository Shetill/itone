
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мСостояниеЗаказовПокупателя = Новый Массив;
	мСостояниеЗаказовПокупателя.Добавить(Справочники.СостоянияЗаказовПокупателей.НайтиПоНаименованию("В производство,оплачен"));
	мСостояниеЗаказовПокупателя.Добавить(Справочники.СостоянияЗаказовПокупателей.НайтиПоНаименованию("В производство,не оплачен"));
	
	//Организация = Справочники.Организации.НайтиПоНаименованию("ХОТПАЙП");
	Организация  = Справочники.Организации.ОрганизацияПоУмолчанию();
	Период.ДатаНачала = НачалоГода(ТекущаяДата());//'20180201';
	Период.ДатаОкончания = ТекущаяДата();//'20180228';
	ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
	
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Организация", 					Организация);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("НачДата",						Период.ДатаНачала);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("КонДата",						Период.ДатаОкончания);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Организация", 					Организация);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("СостояниеЗаказа",				мСостояниеЗаказовПокупателя);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Номенклатура",					Номенклатура);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("атн_ОсновноеПодразделение", 	Подразделение);
	
КонецПроцедуры

#Область Обработчики_событий_элементов_формы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьЗаказыПокупателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОбновитьЗаказыПокупателей();
	ЗаполнитьЗаказПокупателяРасшифровка();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПокупателейПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ВыделенныеСтроки.Количество() > 0 Тогда
		Если НЕ Элемент.ТекущаяСтрока = Неопределено Тогда
			ЗаполнитьЗаказПокупателяРасшифровка();
			ЗаполнитьОбновитьДерево();
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПокупателяРасшифровкаПриАктивизацииСтроки(Элемент)
	
	ЗаполнитьОбновитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении()
	
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("атн_ОсновноеПодразделение", Подразделение);
	ЗаполнитьЗаказПокупателяРасшифровка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОчистка()
	
	ПодразделениеПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	ЗаполнитьЗаказПокупателяРасшифровка();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОчистка(Элемент, СтандартнаяОбработка)
	
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	ЗаполнитьЗаказПокупателяРасшифровка();
	
КонецПроцедуры


#КонецОбласти

#region update_data_forms

&НаСервере
Процедура ОбновитьЗаказыПокупателей()
	
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("Организация", 	Организация);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("НачДата",		Период.ДатаНачала);
	ЗаказыПокупателей.Параметры.УстановитьЗначениеПараметра("КонДата",		Период.ДатаОкончания);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьЗаказПокупателяРасшифровка()
	
	тзПроизводство = Новый ТаблицаЗначений;
	тзПроизводство.Очистить();
	
	ЗаказПокупателяРасшифровка.Очистить();
	Если Элементы.ЗаказыПокупателей.ВыделенныеСтроки.Количество()> 0  Тогда
		мЗаказыПокупателей = Элементы.ЗаказыПокупателей.ВыделенныеСтроки;
	Иначе
		мЗаказыПокупателей = Элементы.ЗаказыПокупателей.ТекущаяСтрока;
	КонецЕсли; 
	
	ЗапросЗаказПокупателя = Новый Запрос;
	ЗапросЗаказПокупателя.Текст =
	"ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.Ссылка КАК атн_ЗаказПокупателя,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Количество КАК Заказано,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка В(&ЗаказПокупателя)
	|	И (&Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура = &Номенклатура)
	|	И НЕ ЗаказПокупателяЗапасы.Ссылка.ПометкаУдаления
	|	И (&атн_ОсновноеПодразделение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.атн_ОсновноеПодразделение = &атн_ОсновноеПодразделение)";
	
	ЗапросЗаказНаПроизводство = Новый Запрос;
	ЗапросЗаказНаПроизводство.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПлан,
	|	ЗаказНаПроизводствоПродукция.Ссылка КАК ЗаказНаПроизводство
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Ссылка.ДокументОснование В(&ЗаказПокупателяОснование)
	|	И НЕ ЗаказНаПроизводствоПродукция.Ссылка.ПометкаУдаления";
	
	//"ВЫБРАТЬ
	//|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	//|	ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПлан,
	//|	ЕСТЬNULL(СборкаЗапасовПродукция.Количество, 0) КАК КоличествоФакт
	//|ИЗ
	//|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	//|		ПО ЗаказНаПроизводствоПродукция.Ссылка = СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство
	//|ГДЕ
	//|	ЗаказНаПроизводствоПродукция.Ссылка.ДокументОснование В(&ЗаказПокупателяОснование)
	//|	И НЕ ЗаказНаПроизводствоПродукция.Ссылка.ПометкаУдаления";
	
	ЗапросЗаказПокупателя.УстановитьПараметр("ЗаказПокупателя",				мЗаказыПокупателей);
	ЗапросЗаказПокупателя.УстановитьПараметр("атн_ОсновноеПодразделение",	Подразделение);
	ЗапросЗаказПокупателя.УстановитьПараметр("Номенклатура",				Номенклатура);
	
	ЗапросЗаказНаПроизводство.УстановитьПараметр("ЗаказПокупателяОснование",	мЗаказыПокупателей);
	
	ЗаказПокупателяРасшифровка.Загрузить(ЗапросЗаказПокупателя.Выполнить().Выгрузить());
	тзЗаказНаПроизводство = ЗапросЗаказНаПроизводство.Выполнить().Выгрузить();
	Если тзЗаказНаПроизводство.Количество()>0 Тогда
		тзПроизводство = ПолучитьПроизвоствоПоОснованиюЗаказНаПроизводство(тзЗаказНаПроизводство.ВыгрузитьКолонку("ЗаказНаПроизводство"));
	КонецЕсли; 
	//ЗаказНаПроизводство.Свернуть("Номенклатура","КоличествоПлан,КоличествоФакт");
	
	Для Каждого тСтрока из ЗаказПокупателяРасшифровка Цикл
		стрЗаказНаПроизводство = тзЗаказНаПроизводство.Найти(тСтрока.Номенклатура, "Номенклатура");
		Если НЕ стрЗаказНаПроизводство = Неопределено Тогда
			тСтрока.КоличествоПлан = стрЗаказНаПроизводство.КоличествоПлан;
			стрПроизводство = тзПроизводство.Найти(тСтрока.Номенклатура);
			Если НЕ стрПроизводство = Неопределено Тогда
				тСтрока.КоличествоФакт = стрПроизводство.КоличествоФакт;
				тСтрока.Выпустить = тСтрока.КоличествоПлан - стрПроизводство.КоличествоФакт;
			КонецЕсли; 
			//тСтрока.КоличествоФакт = стрПоиск.КоличествоФакт;
			//тСтрока.Выпустить = стрПоиск.КоличествоПлан - стрПоиск.КоличествоФакт;
		Иначе
			тСтрока.КоличествоПлан = 0;
			тСтрока.Выпустить = тСтрока.Заказано;
		КонецЕсли;
	КонецЦикла;
	
	
КонецФункции

&НаСервере
Функция ЗаполнитьОбновитьДерево()
	
	рДерево = Новый  ДеревоЗначений;
	рДерево.Колонки.Добавить("ДокументНоменклатура");
	рДерево.Колонки.Добавить("КоличествоПлан");
	рДерево.Колонки.Добавить("КоличествоФакт");
	рДерево.Колонки.Добавить("Основание");
	//рДерево.Колонки.Добавить("Производство");
	
	тзПроизводство = Новый ТаблицаЗначений;
	
	мЗаказыПокупателей = Элементы.ЗаказыПокупателей.ВыделенныеСтроки;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоПродукция.Ссылка КАК ЗаказНаПроизводство,
	|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПлан
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|ГДЕ
	|	ЗаказНаПроизводствоПродукция.Ссылка.ДокументОснование В(&ЗаказыПокупателей)
	|	И НЕ ЗаказНаПроизводствоПродукция.Ссылка.ПометкаУдаления
	|	И ЗаказНаПроизводствоПродукция.Ссылка.Проведен
	|ИТОГИ
	|	СУММА(КоличествоПлан)
	|ПО
	|	Номенклатура";
	
	//"ВЫБРАТЬ
	//|	ЗаказНаПроизводствоПродукция.Ссылка КАК ЗаказНаПроизводство,
	//|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
	//|	ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПлан,
	//|	ЗаказНаПроизводствоПродукция.Ссылка.ДокументОснование КАК Основание,
	//|	ЕСТЬNULL(СборкаЗапасовПродукция.Количество, 0) КАК КоличествоФакт,
	//|	СборкаЗапасовПродукция.Ссылка КАК Производство
	//|ИЗ
	//|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	//|		ПО ЗаказНаПроизводствоПродукция.Ссылка = СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство
	//|			И ЗаказНаПроизводствоПродукция.Номенклатура = СборкаЗапасовПродукция.Номенклатура
	//|ГДЕ
	//|	ЗаказНаПроизводствоПродукция.Ссылка.ДокументОснование В(&ЗаказыПокупателей)
	//|	И НЕ ЗаказНаПроизводствоПродукция.Ссылка.ПометкаУдаления
	//|	И ЗаказНаПроизводствоПродукция.Ссылка.Проведен
	//|ИТОГИ
	//|	СУММА(КоличествоПлан),
	//|	СУММА(КоличествоФакт)
	//|ПО
	//|	Номенклатура";
	
	//ЗапросПроизводство = Новый Запрос;
	//ЗапросПроизводство.Текст = 
	//"ВЫБРАТЬ
	//|	СборкаЗапасовПродукция.Номенклатура КАК Номенклатура,
	//|	СборкаЗапасовПродукция.Количество КАК КоличествоФакт,
	//|	СборкаЗапасовПродукция.Ссылка КАК Производство,
	//|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	//|ИЗ
	//|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	//|ГДЕ
	//|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство В(&ЗаказНаПроизводство)
	//|ИТОГИ
	//|	СУММА(КоличествоФакт)
	//|ПО
	//|	Номенклатура";
	
	
	Запрос.УстановитьПараметр("ЗаказыПокупателей", мЗаказыПокупателей);
	
	тзЗаказыНаПроизводство = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаказНаПроизводство"); 
	
	//ЗапросПроизводство.УстановитьПараметр("ЗаказНаПроизводство", тзЗаказыНаПроизводство);
	
	//тзПроизводство = ЗапросПроизводство.Выполнить().Выгрузить();
	
	тзПроизводство = ПолучитьПроизвоствоПоОснованиюЗаказНаПроизводство(тзЗаказыНаПроизводство);
	
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		нСтрока = рДерево.Строки.Добавить();
		нСтрока.ДокументНоменклатура 	= Выборка.Номенклатура;
		нСтрока.КоличествоПлан 			= Выборка.КоличествоПлан;
		НоменклатураПроизводствоПоиск = тзПроизводство.Найти(нСтрока.ДокументНоменклатура,"Номенклатура");
		нСтрока.КоличествоФакт 			= ?(ЗначениеЗаполнено(НоменклатураПроизводствоПоиск),НоменклатураПроизводствоПоиск.КоличествоФакт, 0);//Выборка.КоличествоФакт;
		ДетальнаяВыборка = Выборка.Выбрать();
		Пока ДетальнаяВыборка.Следующий() Цикл
			нСтрДетальная = нСтрока.Строки.Добавить();
			нСтрДетальная.ДокументНоменклатура	= ДетальнаяВыборка.ЗаказНаПроизводство;
			нСтрДетальная.КоличествоПлан 		= ДетальнаяВыборка.КоличествоПлан;
			ПроизводствоПоиск = тзПроизводство.Найти(нСтрДетальная.ДокументНоменклатура);
			Если ЗначениеЗаполнено(ПроизводствоПоиск) Тогда
				нСтрокаПроизводство = нСтрДетальная.Строки.Добавить();	
				//НоменклатураПроизводствоПоиск = тзПроизводство.Найти(нСтрока.ДокументНоменклатура,"Номенклатура");
				Если ЗначениеЗаполнено(НоменклатураПроизводствоПоиск) Тогда
					нСтрокаПроизводство.ДокументНоменклатура	= ПроизводствоПоиск.Производство;
					нСтрокаПроизводство.КоличествоФакт			= НоменклатураПроизводствоПоиск.КоличествоФакт;
					нСтрока.КоличествоПлан = нСтрока.КоличествоПлан - НоменклатураПроизводствоПоиск.КоличествоФакт;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(рДерево, "Дерево");
	
КонецФункции


#endregion

#region docs

&НаКлиенте
Процедура СоздатьЗаказНаПроизводство(Команда)
	
	НовыйЗаказНаПроизводство = СоздатьЗаказНаПроизводствоНаСервере();
	ОткрытьЗначение(НовыйЗаказНаПроизводство);
	ЗаполнитьОбновитьДерево();
	ЗаполнитьЗаказПокупателяРасшифровка();
	
КонецПроцедуры

&НаСервере
Функция СоздатьЗаказНаПроизводствоНаСервере()
	
	докЗаказНаПроизводство = Документы.ЗаказНаПроизводство.СоздатьДокумент();
	ЗаполнитьОсновныеРеквизитыДокументаЗаказНаПроизводство(докЗаказНаПроизводство);
	ЗаполнитьТЧМатериалыЗаказаНаПроизводство(ЗаказПокупателяРасшифровка, докЗаказНаПроизводство.Продукция);
	докЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат докЗаказНаПроизводство.Ссылка;
	
	
КонецФункции

&НаСервере
Функция ЗаполнитьОсновныеРеквизитыДокументаЗаказНаПроизводство(ДокументЗаполнения)
	
	ВидОперецииСборка = Перечисления.ВидыОперацийЗаказНаПроизводство.Сборка;
	СостояниеЗаказаВРаботе = Справочники.СостоянияЗаказовНаПроизводство.НайтиПоНаименованию("В работе");
	
	ДокументЗаполнения.Автор				= ПараметрыСеанса.ТекущийПользователь;
	ДокументЗаполнения.ДокументОснование 	= Элементы.ЗаказыПокупателей.ТекущаяСтрока;
	ДокументЗаполнения.СостояниеЗаказа		= СостояниеЗаказаВРаботе;
	ДокументЗаполнения.Старт				= НачалоДня(ТекущаяДата());
	ДокументЗаполнения.Финиш				= КонецДня(ТекущаяДата());
	ДокументЗаполнения.Дата                 = ТекущаяДата();
	ДокументЗаполнения.ВидОперации          = ВидОперецииСборка;
	ДокументЗаполнения.Организация			= Организация;
	ДокументЗаполнения.СтруктурнаяЕдиница	= Подразделение; //(цех)
	
	
КонецФункции

&НаСервере
Функция ЗаполнитьТЧМатериалыЗаказаНаПроизводство(ДанныеЗаполнениеТЧ, ДокументМатериалыТЧ)
	
	Для каждого тСтрока Из ДанныеЗаполнениеТЧ Цикл
		Если тСтрока.Выпустить = 0  Тогда
			Продолжить;		
		КонецЕсли; 
		нСтрока = ДокументМатериалыТЧ.Добавить();
		нСтрока.Номенклатура		= тСтрока.Номенклатура;
		нСтрока.Количество			= тСтрока.Выпустить;
		нСтрока.ЕдиницаИзмерения	= тСтрока.ЕдиницаИзмерения;
		нСтрока.атн_ЗаказПокупателя	= тСтрока.атн_ЗаказПокупателя;
	КонецЦикла;
	
КонецФункции


#endregion

#region develop

// <Делает выборку документов производства (Сборка запасов), которые созданы на основании документа Заказ на прроизводство>
//
// Параметры:
//  <мЗаказыНаПроизводство>  - <Массив> - <массив документов "Заказ на производство">
//
// Возвращаемое значение:
//   <ТаблицаЗначений.тзПроизводство>   - <выгрузка результата запроса>
//
&НаСервере
Функция ПолучитьПроизвоствоПоОснованиюЗаказНаПроизводство(мЗаказыНаПроизводство)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СборкаЗапасовПродукция.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовПродукция.Количество КАК КоличествоФакт,
	|	СборкаЗапасовПродукция.Ссылка КАК Производство,
	|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство В(&ЗаказНаПроизводство)
	|ИТОГИ
	|	СУММА(КоличествоФакт)
	|ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", мЗаказыНаПроизводство);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции



#endregion
















