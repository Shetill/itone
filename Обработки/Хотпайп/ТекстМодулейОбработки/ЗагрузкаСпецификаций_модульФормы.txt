
//Выбор файла загрузки
&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Эксель'; en = 'Excel'")
	+ "Excel(*.xlsx)|*.xlsx|(*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ФайлЗагрузки  = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		ТекстЛога = "Файл не выбран!";
		ЛогОшибок.ДобавитьСтроку(Символы.ПС + "===============================================================");
		ЛогОшибок.ДобавитьСтроку(ТекстЛога);
	КонецЕсли;
	
КонецПроцедуры //ФайлЗагрузкиНачалоВыбора()

//Грузим данные из excel файла в нашу обработку (ДанныеИзExcel)
&НаКлиенте
Процедура ПолучитьДанныеИзExcel(Команда)
	
	ВремяЗапуска = Формат(ТекущаяДата(),"ДЛФ=В");//для статистики
	
	тзДанныеИзЭксель.Очистить();
	
	НомерЛиста = 1;
	//Пытаемся подключиться к Excel
	Попытка
		Excel = Новый COMОбъект("Excel.Application");    
	Исключение
		ТекстЛога = ОписаниеОшибки();
		Сообщить("Возможно на компьютере отсутствует программа excel !!!");
		ЛогОшибок.ДобавитьСтроку(Символы.ПС + "===============================================================");
		ЛогОшибок.ДобавитьСтроку(ТекстЛога);
	КонецПопытки;
	
	//Проверим выбран ли файл
	Отказ 		= Ложь;
	ИмяОбъекта 	= "Файл выгрузки";
	Если Не ЗначениеЗаполнено(ФайлЗагрузки) Тогда
		Результат = 0;	
	КонецЕсли; 
	ПроверкаЗаполнения( Результат, ИмяОбъекта, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//Подключились удачно, файл выбран - открываем файл
	Excel.Workbooks.Open(ФайлЗагрузки);    
	
	//Открываем необходимый лист
	Excel.Sheets(НомерЛиста).select();
	
	//Получим количество строк и колонок.
	//В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel
	Версия = Лев(Excel.Version, Найти(Excel.Version,".")-1);
	Если Версия = "8" тогда
		//ФайлСтрок   = Excel.Cells.CurrentRegion.Rows.Count;
		//ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
		КоличествоСтрок   = Excel.Cells.CurrentRegion.Rows.Count;
		КоличествоКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
	Иначе
		КоличествоСтрок   = Excel.Cells(1,1).SpecialCells(11).Row;
		КоличествоКолонок = Excel.Cells(1,1).SpecialCells(11).Column;
	Конецесли;
	
	ПроцентыВыполнения = Новый Массив ;
	ПроцентыВыполнения.Вставить(0, 	Формат(КоличествоСтрок/100, "ЧДЦ=") ); 
	ПроцентыВыполнения.Вставить(1, 	Формат((КоличествоСтрок/100*10), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(2, 	Формат((КоличествоСтрок/100*20), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(3, 	Формат((КоличествоСтрок/100*30), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(4, 	Формат((КоличествоСтрок/100*40), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(5, 	Формат((КоличествоСтрок/100*50), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(6, 	Формат((КоличествоСтрок/100*60), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(7, 	Формат((КоличествоСтрок/100*70), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(8, 	Формат((КоличествоСтрок/100*80), "ЧДЦ=")); 
	ПроцентыВыполнения.Вставить(9, 	Формат((КоличествоСтрок/100*90), "ЧДЦ=")); 
	
	// Выбираем данные из файла   
	Сч = 0;
	Для i = 2 по КоличествоСтрок Цикл
		
		НайденныйПроцент = ПроцентыВыполнения.Найти(Строка(i));
		
		Если НЕ  НайденныйПроцент = Неопределено Тогда
			Прогресс = НайденныйПроцент*10;		
		КонецЕсли;
		
		Если i > 5 Тогда
			Прервать;
		КонецЕсли; 
		
		Состояние("Чтение данных из Excel", Прогресс, "Пожалуйста подождите, идет чтение и загрузка данных из Excel");
		
		//Если колонка код не заполнена, считаем что строка пустая и пропускаем её (всё равно без кода записывать, спецификацию, не лаки-лаки)
		Если НЕ ЗначениеЗаполнено(СокрЛП(Excel.Cells(i, 1).Value)) ИЛИ СокрЛП(Excel.Cells(i, 1).Value) = "" Тогда
			Продолжить;
		КонецЕсли;
		
		//Получим данные из соответсвующих ячеек и запишем их в "ДанныеИзExcel"
		нСтрока = тзДанныеИзЭксель.Добавить();	
		нСтрока.Код 							= СокрЛП(Excel.Cells(i, 1).Value);
		нСтрока.Продукция						= СокрЛП(Excel.Cells(i, 2).Value);
		нСтрока.НаименованиеСпецификации		= СокрЛП(Excel.Cells(i, 3).Value);
		нСтрока.ТипСтрокиСоставаСпецификации	= СокрЛП(Excel.Cells(i, 4).Value);
		нСтрока.НоменклатураМатериал			= СокрЛП(Excel.Cells(i, 5).Value);
		нСтрока.ЕдиницаИзмерения				= СокрЛП(Excel.Cells(i, 6).Value);
		нСтрока.Количество 						= СокрЛП(Excel.Cells(i, 7).Value);
		нСтрока.КоличествоПродукции				= СокрЛП(Excel.Cells(i, 8).Value);
		нСтрока.Спецификация					= СокрЛП(Excel.Cells(i, 9).Value);
		нСтрока.КоличествоВУпаковке				= СокрЛП(Excel.Cells(i, 10).Value);
		
		Сч = Сч+1;
		
	КонецЦикла;    
	
	//Закрываем Excel    
	Excel.ActiveWorkbook.Close();
	
	ЗаполнитьДеревоСпецификации();
	
	ВремяОкончания = Формат(ТекущаяДата(), "ДЛФ=В");//для статистики
	
	//пишем лог
	ТекстЛога = "Загрузка данных из Excel, в ""Таблица Экселя, завершена"". Всего обработано строк: " + Строка(Сч);
	ТекстЛога = ТекстЛога+Символы.ПС+"Время запуска чтения excel: "+Строка(ВремяЗапуска)+Символы.ПС+"Время окончания чтения excel: "+Строка(ВремяОкончания);
	ЛогОшибок.ДобавитьСтроку(Символы.ПС + "===============================================================");
	ЛогОшибок.ДобавитьСтроку(ТекстЛога);
	Сигнал();
	ПоказатьПредупреждение(,"Загрузка из excel завершена!");
	
	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДеревоСпецификации()
	
	тзСпецификации = РеквизитФормыВЗначение("тзДанныеИзЭксель");
	дзСпецификации = РеквизитФормыВЗначение("Спецификации", Тип("ДеревоЗначений"));
	
	СтруктураТипыСтрокСоставаСпецификации = Новый Структура;
	СтруктураТипыСтрокСоставаСпецификации.Вставить("Материал",	Перечисления.ТипыСтрокСоставаСпецификации.Материал);
	СтруктураТипыСтрокСоставаСпецификации.Вставить("Расход",	Перечисления.ТипыСтрокСоставаСпецификации.Расход);
	СтруктураТипыСтрокСоставаСпецификации.Вставить("Сборка",	Перечисления.ТипыСтрокСоставаСпецификации.Сборка);
	СтруктураТипыСтрокСоставаСпецификации.Вставить("Узел",		Перечисления.ТипыСтрокСоставаСпецификации.Узел);
	ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.ПустаяСсылка();
	
	дзСпецификации.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.Код КАК СТРОКА(9)) КАК Код,
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.Продукция КАК СТРОКА(25)) КАК Продукция,
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.НаименованиеСпецификации КАК СТРОКА(100)) КАК НаименованиеСпецификации,
	|	втСпецификацииИзЭксель.ТипСтрокиСоставаСпецификации КАК ТипСтрокиСоставаСпецификации,
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.НоменклатураМатериал КАК СТРОКА(100)) КАК НоменклатураМатериалИзЭксель,
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.ЕдиницаИзмерения КАК СТРОКА(50)) КАК ЕдиницаИзмерения,
	|	втСпецификацииИзЭксель.Количество КАК Количество,
	|	втСпецификацииИзЭксель.КоличествоПродукции КАК КоличествоПродукции,
	|	ВЫРАЗИТЬ(втСпецификацииИзЭксель.Спецификация КАК СТРОКА(100)) КАК Спецификация,
	|	втСпецификацииИзЭксель.КоличествоВУпаковке КАК КоличествоВУпаковке
	|ПОМЕСТИТЬ втСпецификацииИзЭксель
	|ИЗ
	|	&СпецификацииИзЭксель КАК втСпецификацииИзЭксель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСпецификацииИзЭксель.Код КАК Код,
	|	Номенклатура.Ссылка КАК НоменклатураМатериал,
	//|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	втСпецификацииИзЭксель.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втСпецификацииИзЭксель.НаименованиеСпецификации КАК НаименованиеСпецификации,
	|	втСпецификацииИзЭксель.ТипСтрокиСоставаСпецификации КАК ТипСтрокиСоставаСпецификации,
	|	втСпецификацииИзЭксель.Количество КАК Количество,
	|	втСпецификацииИзЭксель.КоличествоПродукции КАК КоличествоПродукции,
	|	втСпецификацииИзЭксель.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(НоменклатураПродукция.Ссылка, втСпецификацииИзЭксель.Продукция) КАК Продукция
	|ИЗ
	|	втСпецификацииИзЭксель КАК втСпецификацииИзЭксель
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО втСпецификацииИзЭксель.НоменклатураМатериалИзЭксель = Номенклатура.Наименование
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	//|		ПО втСпецификацииИзЭксель.ЕдиницаИзмерения = ЕдиницыИзмерения.Наименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураПродукция
	|		ПО втСпецификацииИзЭксель.Код = НоменклатураПродукция.Артикул
	|ИТОГИ ПО
	|	Код,
	|	НаименованиеСпецификации,
	|	Продукция";
	Запрос.УстановитьПараметр("СпецификацииИзЭксель", тзСпецификации);
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока Выборка.Следующий() Цикл
		
		ВыборкаНаименованиеСпецификации = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока ВыборкаНаименованиеСпецификации.Следующий() Цикл
			
			ВыборкаНаименованиеПродукцияСпецификации =  ВыборкаНаименованиеСпецификации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			
			Пока ВыборкаНаименованиеПродукцияСпецификации.Следующий() Цикл
				нСтрока = дзСпецификации.Строки.Добавить();
				нСтрока.Код 						= ВыборкаНаименованиеПродукцияСпецификации.Код;
				нСтрока.НаименованиеСпецификации	= ВыборкаНаименованиеПродукцияСпецификации.НаименованиеСпецификации;
				нСтрока.Продукция 					= ВыборкаНаименованиеПродукцияСпецификации.Продукция;
				
				ДетальнаяВыборка = ВыборкаНаименованиеПродукцияСпецификации.Выбрать();
				Пока ДетальнаяВыборка.Следующий() Цикл
					нСтрокаДетальная = нСтрока.Строки.Добавить();					
					Если ЗначениеЗаполнено(ДетальнаяВыборка.ТипСтрокиСоставаСпецификации) Тогда
						Если НЕ СтруктураТипыСтрокСоставаСпецификации.Свойство(ДетальнаяВыборка.ТипСтрокиСоставаСпецификации, ТипСтрокиСостава) = Неопределено Тогда
							нСтрокаДетальная.ТипСтрокиСоставаСпецификации	= ТипСтрокиСостава;
						КонецЕсли;
					КонецЕсли; 
					//нСтрокаДетальная.ЕдиницаИзмерения 				= ДетальнаяВыборка.ЕдиницаИзмерения;
					нСтрокаДетальная.ЕдиницаИзмерения 				= Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ДетальнаяВыборка.ЕдиницаИзмерения);
					нСтрокаДетальная.НоменклатураМатериал 			= ДетальнаяВыборка.НоменклатураМатериал;
					нСтрокаДетальная.Количество 					= ДетальнаяВыборка.Количество;
					нСтрокаДетальная.КоличествоПродукции 			= ДетальнаяВыборка.КоличествоПродукции;
					нСтрокаДетальная.КоличествоВУпаковке 			= ДетальнаяВыборка.КоличествоВУпаковке;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(дзСпецификации, "Спецификации");
	
КонецФункции

&НаКлиенте
Функция ЗаписатьСпецификации(Команда)
	
	
	ВремяЗапуска = Формат(ТекущаяДата(),"ДЛФ=В");//для статистики

	ЗаписатьСпецификацииНаСервере();
	
	ВремяОкончания = Формат(ТекущаяДата(), "ДЛФ=В");//для статистики
	
	//пишем лог
	ТекстЛога = "Запись спецификаций, в базу данных, завершена!";
	ТекстЛога = ТекстЛога+Символы.ПС+"Время запуска записи спецификаций: "+Строка(ВремяЗапуска)+Символы.ПС+"Время окончания записи спецификаций: "+Строка(ВремяОкончания);
	ЛогОшибок.ДобавитьСтроку(Символы.ПС + "===============================================================");
	ЛогОшибок.ДобавитьСтроку(ТекстЛога);
	Сигнал();
	ПоказатьПредупреждение(,"Запись спецификаций завершена!");
	
КонецФункции

&НаСервере
Функция ЗаписатьСпецификацииНаСервере()
	
	дзСпецификации = РеквизитФормыВЗначение("Спецификации");
	
	Для каждого тСтрока Из дзСпецификации.Строки Цикл
		
		Если ТипЗнч(тСтрока.Продукция) = Тип("Строка") Тогда
			нСтрока = тзНенайденнаяПродукция.Добавить();
			нСтрока.Продукция = тСтрока.Продукция; 
			Продолжить;;
		КонецЕсли; 
		
		СпецификацияПоиск = Справочники.Спецификации.НайтиПоНаименованию(тСтрока.НаименованиеСпецификации);		
		Если СпецификацияПоиск = Справочники.Спецификации.ПустаяСсылка() Тогда
			ОбъектСпецификация = Справочники.Спецификации.СоздатьЭлемент();
			ОбъектСпецификация.Наименование = тСтрока.НаименованиеСпецификации; 
		Иначе
			ОбъектСпецификация = СпецификацияПоиск.Ссылка.ПолучитьОбъект();
			ОбъектСпецификация.Состав.Очистить();
		КонецЕсли;
		
		ОбъектСпецификация.Владелец = тСтрока.Продукция;
		
		Для каждого СтрокаСостав Из тСтрока.Строки Цикл
		    нстрОбъектСпецификацияСостав = ОбъектСпецификация.Состав.Добавить();
			нстрОбъектСпецификацияСостав.ТипСтрокиСостава 		= СтрокаСостав.ТипСтрокиСоставаСпецификации;
			нстрОбъектСпецификацияСостав.Номенклатура 			= СтрокаСостав.НоменклатураМатериал;
			нстрОбъектСпецификацияСостав.Количество 			= СтрокаСостав.Количество;
			нстрОбъектСпецификацияСостав.ЕдиницаИзмерения		= СтрокаСостав.ЕдиницаИзмерения;
			нстрОбъектСпецификацияСостав.КоличествоПродукции	= СтрокаСостав.КоличествоПродукции;
		КонецЦикла; 
		
		ОбъектСпецификация.Записать();
		
	КонецЦикла; 
	
КонецФункции



&НаКлиенте
Функция ПроверкаЗаполнения( Результат, ИмяОбъекта, Отказ)
	
	Если Результат = 0 Тогда
		ТекстЛога = "Не заполнены данные: " + ИмяОбъекта;
		ЛогОшибок.ДобавитьСтроку(Символы.ПС + "===============================================================");
		ЛогОшибок.ДобавитьСтроку(ТекстЛога);
		Отказ = Истина;
	КонецЕсли; 
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ФайлЗагрузки = "D:\RomanPetukhov\ItoneRepos\Обработки\Хотпайп\Копия Спецификации цилиндры простые, пл 90.xlsx";
КонецПроцедуры
